{
  "description": "FRRConfiguration is a piece of FRR configuration.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "frrk8s.metallb.io/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "FRRConfiguration"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "FRRConfigurationSpec defines the desired state of FRRConfiguration.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "bgp": {
          "description": "BGP is the configuration related to the BGP protocol.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "bfdProfiles": {
              "description": "BFDProfiles is the list of bfd profiles to be used when configuring the neighbors.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "BFDProfile is the configuration related to the BFD protocol associated\nto a BGP session.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "name"
                ],
                "properties": {
                  "detectMultiplier": {
                    "description": "Configures the detection multiplier to determine\npacket loss. The remote transmission interval will be multiplied\nby this value to determine the connection loss detection timer.",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int32",
                    "maximum": 255,
                    "minimum": 2
                  },
                  "echoInterval": {
                    "description": "Configures the minimal echo receive transmission\ninterval that this system is capable of handling in milliseconds.\nDefaults to 50ms",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int32",
                    "maximum": 60000,
                    "minimum": 10
                  },
                  "echoMode": {
                    "description": "Enables or disables the echo transmission mode.\nThis mode is disabled by default, and not supported on multi\nhops setups.",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "minimumTtl": {
                    "description": "For multi hop sessions only: configure the minimum\nexpected TTL for an incoming BFD control packet.",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int32",
                    "maximum": 254,
                    "minimum": 1
                  },
                  "name": {
                    "description": "The name of the BFD Profile to be referenced in other parts\nof the configuration.",
                    "type": "string"
                  },
                  "passiveMode": {
                    "description": "Mark session as passive: a passive session will not\nattempt to start the connection and will wait for control packets\nfrom peer before it begins replying.",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "receiveInterval": {
                    "description": "The minimum interval that this system is capable of\nreceiving control packets in milliseconds.\nDefaults to 300ms.",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int32",
                    "maximum": 60000,
                    "minimum": 10
                  },
                  "transmitInterval": {
                    "description": "The minimum transmission interval (less jitter)\nthat this system wants to use to send BFD control packets in\nmilliseconds. Defaults to 300ms",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int32",
                    "maximum": 60000,
                    "minimum": 10
                  }
                },
                "additionalProperties": false
              }
            },
            "routers": {
              "description": "Routers is the list of routers we want FRR to configure (one per VRF).",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "Router represent a neighbor router we want FRR to connect to.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "asn"
                ],
                "properties": {
                  "asn": {
                    "description": "ASN is the AS number to use for the local end of the session.",
                    "type": "integer",
                    "format": "int32",
                    "maximum": 4294967295,
                    "minimum": 0
                  },
                  "id": {
                    "description": "ID is the BGP router ID",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "imports": {
                    "description": "Imports is the list of imported VRFs we want for this router / vrf.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "Import represents the possible imported VRFs to a given router.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "vrf": {
                          "description": "Vrf is the vrf we want to import from",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "neighbors": {
                    "description": "Neighbors is the list of neighbors we want to establish BGP sessions with.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "Neighbor represents a BGP Neighbor we want FRR to connect to.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "address",
                        "asn"
                      ],
                      "properties": {
                        "address": {
                          "description": "Address is the IP address to establish the session with.",
                          "type": "string"
                        },
                        "asn": {
                          "description": "ASN is the AS number to use for the local end of the session.",
                          "type": "integer",
                          "format": "int32",
                          "maximum": 4294967295,
                          "minimum": 0
                        },
                        "bfdProfile": {
                          "description": "BFDProfile is the name of the BFD Profile to be used for the BFD session associated\nto the BGP session. If not set, the BFD session won't be set up.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "connectTime": {
                          "description": "Requested BGP connect time, controls how long BGP waits between connection attempts to a neighbor.",
                          "type": [
                            "string",
                            "null"
                          ],
                          "x-kubernetes-validations": [
                            {
                              "message": "connect time should be between 1 seconds to 65535",
                              "rule": "duration(self).getSeconds() >= 1 && duration(self).getSeconds() <= 65535"
                            },
                            {
                              "message": "connect time should contain a whole number of seconds",
                              "rule": "duration(self).getMilliseconds() % 1000 == 0"
                            }
                          ]
                        },
                        "disableMP": {
                          "description": "To set if we want to disable MP BGP that will separate IPv4 and IPv6 route exchanges into distinct BGP sessions.",
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "ebgpMultiHop": {
                          "description": "EBGPMultiHop indicates if the BGPPeer is multi-hops away.",
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "enableGracefulRestart": {
                          "description": "EnableGracefulRestart allows BGP peer to continue to forward data packets along\nknown routes while the routing protocol information is being restored. If\nthe session is already established, the configuration will have effect\nafter reconnecting to the peer",
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "holdTime": {
                          "description": "HoldTime is the requested BGP hold time, per RFC4271.\nDefaults to 180s.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "keepaliveTime": {
                          "description": "KeepaliveTime is the requested BGP keepalive time, per RFC4271.\nDefaults to 60s.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "password": {
                          "description": "Password to be used for establishing the BGP session.\nPassword and PasswordSecret are mutually exclusive.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "passwordSecret": {
                          "description": "PasswordSecret is name of the authentication secret for the neighbor.\nthe secret must be of type \"kubernetes.io/basic-auth\", and created in the\nsame namespace as the frr-k8s daemon. The password is stored in the\nsecret as the key \"password\".\nPassword and PasswordSecret are mutually exclusive.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "name": {
                              "description": "name is unique within a namespace to reference a secret resource.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "namespace defines the space within which the secret name must be unique.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "x-kubernetes-map-type": "atomic",
                          "additionalProperties": false
                        },
                        "port": {
                          "description": "Port is the port to dial when establishing the session.\nDefaults to 179.",
                          "type": [
                            "integer",
                            "null"
                          ],
                          "maximum": 16384,
                          "minimum": 0
                        },
                        "sourceaddress": {
                          "description": "SourceAddress is the IPv4 or IPv6 source address to use for the BGP\nsession to this neighbour, may be specified as either an IP address\ndirectly or as an interface name",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "toAdvertise": {
                          "description": "ToAdvertise represents the list of prefixes to advertise to the given neighbor\nand the associated properties.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "allowed": {
                              "description": "Allowed is is the list of prefixes allowed to be propagated to\nthis neighbor. They must match the prefixes defined in the router.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "mode": {
                                  "description": "Mode is the mode to use when handling the prefixes.\nWhen set to \"filtered\", only the prefixes in the given list will be allowed.\nWhen set to \"all\", all the prefixes configured on the router will be allowed.",
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "enum": [
                                    "all",
                                    "filtered"
                                  ]
                                },
                                "prefixes": {
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "additionalProperties": false
                            },
                            "withCommunity": {
                              "description": "PrefixesWithCommunity is a list of prefixes that are associated to a\nbgp community when being advertised. The prefixes associated to a given local pref\nmust be in the prefixes allowed to be advertised.",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "description": "CommunityPrefixes is a list of prefixes associated to a community.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "community": {
                                    "description": "Community is the community associated to the prefixes.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "prefixes": {
                                    "description": "Prefixes is the list of prefixes associated to the community.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "format": "cidr",
                                    "minItems": 1,
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "withLocalPref": {
                              "description": "PrefixesWithLocalPref is a list of prefixes that are associated to a local\npreference when being advertised. The prefixes associated to a given local pref\nmust be in the prefixes allowed to be advertised.",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "description": "LocalPrefPrefixes is a list of prefixes associated to a local preference.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "localPref": {
                                    "description": "LocalPref is the local preference associated to the prefixes.",
                                    "type": [
                                      "integer",
                                      "null"
                                    ],
                                    "format": "int32"
                                  },
                                  "prefixes": {
                                    "description": "Prefixes is the list of prefixes associated to the local preference.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "format": "cidr",
                                    "minItems": 1,
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "toReceive": {
                          "description": "ToReceive represents the list of prefixes to receive from the given neighbor.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "allowed": {
                              "description": "Allowed is the list of prefixes allowed to be received from\nthis neighbor.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "mode": {
                                  "description": "Mode is the mode to use when handling the prefixes.\nWhen set to \"filtered\", only the prefixes in the given list will be allowed.\nWhen set to \"all\", all the prefixes configured on the router will be allowed.",
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "enum": [
                                    "all",
                                    "filtered"
                                  ]
                                },
                                "prefixes": {
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "description": "PrefixSelector is a filter of prefixes to receive.",
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "ge": {
                                        "description": "The prefix length modifier. This selector accepts any matching prefix with length\ngreater or equal the given value.",
                                        "type": [
                                          "integer",
                                          "null"
                                        ],
                                        "format": "int32",
                                        "maximum": 128,
                                        "minimum": 1
                                      },
                                      "le": {
                                        "description": "The prefix length modifier. This selector accepts any matching prefix with length\nless or equal the given value.",
                                        "type": [
                                          "integer",
                                          "null"
                                        ],
                                        "format": "int32",
                                        "maximum": 128,
                                        "minimum": 1
                                      },
                                      "prefix": {
                                        "type": [
                                          "string",
                                          "null"
                                        ],
                                        "format": "cidr"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "prefixes": {
                    "description": "Prefixes is the list of prefixes we want to advertise from this router instance.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "vrf": {
                    "description": "VRF is the host vrf used to establish sessions from this router.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "nodeSelector": {
          "description": "NodeSelector limits the nodes that will attempt to apply this config.\nWhen specified, the configuration will be considered only on nodes\nwhose labels match the specified selectors.\nWhen it is not specified all nodes will attempt to apply this config.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "x-kubernetes-list-type": "atomic"
                  }
                },
                "additionalProperties": false
              },
              "x-kubernetes-list-type": "atomic"
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "x-kubernetes-map-type": "atomic",
          "additionalProperties": false
        },
        "raw": {
          "description": "Raw is a snippet of raw frr configuration that gets appended to the\none rendered translating the type safe API.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "priority": {
              "description": "Priority is the order with this configuration is appended to the\nbottom of the rendered configuration. A higher value means the\nraw config is appended later in the configuration file.",
              "type": [
                "integer",
                "null"
              ]
            },
            "rawConfig": {
              "description": "Config is a raw FRR configuration to be appended to the configuration\nrendered via the k8s api.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "FRRConfigurationStatus defines the observed state of FRRConfiguration.",
      "type": [
        "object",
        "null"
      ]
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "frrk8s.metallb.io",
      "kind": "FRRConfiguration",
      "version": "v1beta1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}