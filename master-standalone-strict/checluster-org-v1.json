{
  "description": "The `CheCluster` custom resource allows defining and managing a Che server installation",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "org.eclipse.che/v1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "CheCluster"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "Desired configuration of the Che installation.\nBased on these settings, the  Operator automatically creates and maintains\nseveral ConfigMaps that will contain the appropriate environment variables\nthe various components of the Che installation.\nThese generated ConfigMaps must NOT be updated manually.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "auth": {
          "description": "Configuration settings related to the Authentication used by the Che installation.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "debug": {
              "description": "Deprecated. The value of this flag is ignored.\nDebug internal identity provider.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "externalIdentityProvider": {
              "description": "Deprecated. The value of this flag is ignored.\nInstructs the Operator on whether or not to deploy a dedicated Identity Provider (Keycloak or RH SSO instance).\nInstructs the Operator on whether to deploy a dedicated Identity Provider (Keycloak or RH-SSO instance).\nBy default, a dedicated Identity Provider server is deployed as part of the Che installation. When `externalIdentityProvider` is `true`,\nno dedicated identity provider will be deployed by the Operator and you will need to provide details about the external identity provider you are about to use.\nSee also all the other fields starting with: `identityProvider`.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "gatewayAuthenticationSidecarImage": {
              "description": "Gateway sidecar responsible for authentication when NativeUserMode is enabled.\nSee link:https://github.com/oauth2-proxy/oauth2-proxy[oauth2-proxy] or link:https://github.com/openshift/oauth-proxy[openshift/oauth-proxy].",
              "type": [
                "string",
                "null"
              ]
            },
            "gatewayAuthorizationSidecarImage": {
              "description": "Gateway sidecar responsible for authorization when NativeUserMode is enabled.\nSee link:https://github.com/brancz/kube-rbac-proxy[kube-rbac-proxy] or link:https://github.com/openshift/kube-rbac-proxy[openshift/kube-rbac-proxy]",
              "type": [
                "string",
                "null"
              ]
            },
            "gatewayConfigBumpEnv": {
              "description": "List of environment variables to set in the Configbump container.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "EnvVar represents an environment variable present in a Container.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "valueFrom": {
                    "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "configMapKeyRef": {
                        "description": "Selects a key of a ConfigMap.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "fieldRef": {
                        "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "fieldPath"
                        ],
                        "properties": {
                          "apiVersion": {
                            "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "fieldPath": {
                            "description": "Path of the field to select in the specified API version.",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "resourceFieldRef": {
                        "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "resource"
                        ],
                        "properties": {
                          "containerName": {
                            "description": "Container name: required for volumes, optional for env vars",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "divisor": {
                            "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          },
                          "resource": {
                            "description": "Required: resource to select",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "secretKeyRef": {
                        "description": "Selects a key of a secret in the pod's namespace",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "gatewayEnv": {
              "description": "List of environment variables to set in the Gateway container.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "EnvVar represents an environment variable present in a Container.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "valueFrom": {
                    "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "configMapKeyRef": {
                        "description": "Selects a key of a ConfigMap.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "fieldRef": {
                        "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "fieldPath"
                        ],
                        "properties": {
                          "apiVersion": {
                            "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "fieldPath": {
                            "description": "Path of the field to select in the specified API version.",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "resourceFieldRef": {
                        "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "resource"
                        ],
                        "properties": {
                          "containerName": {
                            "description": "Container name: required for volumes, optional for env vars",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "divisor": {
                            "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          },
                          "resource": {
                            "description": "Required: resource to select",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "secretKeyRef": {
                        "description": "Selects a key of a secret in the pod's namespace",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "gatewayHeaderRewriteSidecarImage": {
              "description": "Deprecated. The value of this flag is ignored. Sidecar functionality is now implemented in Traefik plugin.",
              "type": [
                "string",
                "null"
              ]
            },
            "gatewayKubeRbacProxyEnv": {
              "description": "List of environment variables to set in the Kube rbac proxy container.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "EnvVar represents an environment variable present in a Container.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "valueFrom": {
                    "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "configMapKeyRef": {
                        "description": "Selects a key of a ConfigMap.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "fieldRef": {
                        "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "fieldPath"
                        ],
                        "properties": {
                          "apiVersion": {
                            "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "fieldPath": {
                            "description": "Path of the field to select in the specified API version.",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "resourceFieldRef": {
                        "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "resource"
                        ],
                        "properties": {
                          "containerName": {
                            "description": "Container name: required for volumes, optional for env vars",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "divisor": {
                            "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          },
                          "resource": {
                            "description": "Required: resource to select",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "secretKeyRef": {
                        "description": "Selects a key of a secret in the pod's namespace",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "gatewayOAuthProxyEnv": {
              "description": "List of environment variables to set in the OAuth proxy container.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "EnvVar represents an environment variable present in a Container.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "valueFrom": {
                    "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "configMapKeyRef": {
                        "description": "Selects a key of a ConfigMap.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "fieldRef": {
                        "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "fieldPath"
                        ],
                        "properties": {
                          "apiVersion": {
                            "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "fieldPath": {
                            "description": "Path of the field to select in the specified API version.",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "resourceFieldRef": {
                        "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "resource"
                        ],
                        "properties": {
                          "containerName": {
                            "description": "Container name: required for volumes, optional for env vars",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "divisor": {
                            "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          },
                          "resource": {
                            "description": "Required: resource to select",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "secretKeyRef": {
                        "description": "Selects a key of a secret in the pod's namespace",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "identityProviderAdminUserName": {
              "description": "Deprecated. The value of this flag is ignored.\nOverrides the name of the Identity Provider administrator user. Defaults to `admin`.",
              "type": [
                "string",
                "null"
              ]
            },
            "identityProviderClientId": {
              "description": "Deprecated. The value of this flag is ignored.\nName of a Identity provider, Keycloak or RH-SSO, `client-id` that is used for Che.\nOverride this when an external Identity Provider is in use. See the `externalIdentityProvider` field.\nWhen omitted or left blank, it is set to the value of the `flavour` field suffixed with `-public`.",
              "type": [
                "string",
                "null"
              ]
            },
            "identityProviderContainerResources": {
              "description": "Deprecated. The value of this flag is ignored.\nIdentity provider container custom settings.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "limits": {
                  "description": "Limits describes the maximum amount of compute resources allowed.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "cpu": {
                      "description": "CPU, in cores. (500m = .5 cores)",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "memory": {
                      "description": "Memory, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "request": {
                  "description": "Requests describes the minimum amount of compute resources required.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "cpu": {
                      "description": "CPU, in cores. (500m = .5 cores)",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "memory": {
                      "description": "Memory, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "identityProviderImage": {
              "description": "Deprecated. The value of this flag is ignored.\nOverrides the container image used in the Identity Provider, Keycloak or RH-SSO, deployment.\nThis includes the image tag. Omit it or leave it empty to use the default container image provided by the Operator.",
              "type": [
                "string",
                "null"
              ]
            },
            "identityProviderImagePullPolicy": {
              "description": "Deprecated. The value of this flag is ignored.\nOverrides the image pull policy used in the Identity Provider, Keycloak or RH-SSO, deployment.\nDefault value is `Always` for `nightly`, `next` or `latest` images, and `IfNotPresent` in other cases.",
              "type": [
                "string",
                "null"
              ]
            },
            "identityProviderIngress": {
              "description": "Deprecated. The value of this flag is ignored.\nIngress custom settings.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "annotations": {
                  "description": "Unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "labels": {
                  "description": "Comma separated list of labels that can be used to organize and categorize objects by scoping and selecting.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "identityProviderPassword": {
              "description": "Deprecated. The value of this flag is ignored.\nOverrides the password of Keycloak administrator user.\nOverride this when an external Identity Provider is in use. See the `externalIdentityProvider` field.\nWhen omitted or left blank, it is set to an auto-generated password.",
              "type": [
                "string",
                "null"
              ]
            },
            "identityProviderPostgresPassword": {
              "description": "Deprecated. The value of this flag is ignored.\nPassword for a Identity Provider, Keycloak or RH-SSO, to connect to the database.\nOverride this when an external Identity Provider is in use. See the `externalIdentityProvider` field.\nWhen omitted or left blank, it is set to an auto-generated password.",
              "type": [
                "string",
                "null"
              ]
            },
            "identityProviderPostgresSecret": {
              "description": "Deprecated. The value of this flag is ignored.\nThe secret that contains `password` for the Identity Provider, Keycloak or RH-SSO, to connect to the database.\nWhen the secret is defined, the `identityProviderPostgresPassword` is ignored. When the value is omitted or left blank, the one of following scenarios applies:\n1. `identityProviderPostgresPassword` is defined, then it will be used to connect to the database.\n2. `identityProviderPostgresPassword` is not defined, then a new secret with the name `che-identity-postgres-secret` will be created with an auto-generated value for `password`.\nThe secret must have `app.kubernetes.io/part-of=che.eclipse.org` label.",
              "type": [
                "string",
                "null"
              ]
            },
            "identityProviderRealm": {
              "description": "Deprecated. The value of this flag is ignored.\nName of a Identity provider, Keycloak or RH-SSO, realm that is used for Che.\nOverride this when an external Identity Provider is in use. See the `externalIdentityProvider` field.\nWhen omitted or left blank, it is set to the value of the `flavour` field.",
              "type": [
                "string",
                "null"
              ]
            },
            "identityProviderRoute": {
              "description": "Deprecated. The value of this flag is ignored.\nRoute custom settings.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "annotations": {
                  "description": "Unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "domain": {
                  "description": "Operator uses the domain to generate a hostname for a route.\nIn a conjunction with labels it creates a route, which is served by a non-default Ingress controller.\nThe generated host name will follow this pattern: `<route-name>-<route-namespace>.<domain>`.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "labels": {
                  "description": "Comma separated list of labels that can be used to organize and categorize objects by scoping and selecting.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "identityProviderSecret": {
              "description": "Deprecated. The value of this flag is ignored.\nThe secret that contains `user` and `password` for Identity Provider.\nWhen the secret is defined, the `identityProviderAdminUserName` and `identityProviderPassword` are ignored.\nWhen the value is omitted or left blank, the one of following scenarios applies:\n1. `identityProviderAdminUserName` and `identityProviderPassword` are defined, then they will be used.\n2. `identityProviderAdminUserName` or `identityProviderPassword` are not defined, then a new secret with the name\n`che-identity-secret` will be created with default value `admin` for `user` and with an auto-generated value for `password`.\nThe secret must have `app.kubernetes.io/part-of=che.eclipse.org` label.",
              "type": [
                "string",
                "null"
              ]
            },
            "identityProviderURL": {
              "description": "Public URL of the Identity Provider server (Keycloak / RH-SSO server).\nSet this ONLY when a use of an external Identity Provider is needed.\nSee the `externalIdentityProvider` field. By default, this will be automatically calculated and set by the Operator.",
              "type": [
                "string",
                "null"
              ]
            },
            "identityToken": {
              "description": "Identity token to be passed to upstream. There are two types of tokens supported: `id_token` and `access_token`.\nDefault value is `id_token`.\nThis field is specific to Che installations made for Kubernetes only and ignored for OpenShift.",
              "type": [
                "string",
                "null"
              ]
            },
            "initialOpenShiftOAuthUser": {
              "description": "Deprecated. The value of this flag is ignored.\nFor operating with the OpenShift OAuth authentication, create a new user account since the kubeadmin can not be used.\nIf the value is true, then a new OpenShift OAuth user will be created for the HTPasswd identity provider.\nIf the value is false and the user has already been created, then it will be removed.\nIf value is an empty, then do nothing.\nThe user's credentials are stored in the `openshift-oauth-user-credentials` secret in 'openshift-config' namespace by Operator.\nNote that this solution is Openshift 4 platform-specific.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "nativeUserMode": {
              "description": "Deprecated. The value of this flag is ignored.\nEnables native user mode. Currently works only on OpenShift and DevWorkspace engine.\nNative User mode uses OpenShift OAuth directly as identity provider, without Keycloak.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "oAuthClientName": {
              "description": "Name of the OpenShift `OAuthClient` resource used to setup identity federation on the OpenShift side. Auto-generated when left blank. See also the `OpenShiftoAuth` field.",
              "type": [
                "string",
                "null"
              ]
            },
            "oAuthScope": {
              "description": "Access Token Scope.\nThis field is specific to Che installations made for Kubernetes only and ignored for OpenShift.",
              "type": [
                "string",
                "null"
              ]
            },
            "oAuthSecret": {
              "description": "Name of the secret set in the OpenShift `OAuthClient` resource used to setup identity federation on the OpenShift side. Auto-generated when left blank. See also the `OAuthClientName` field.",
              "type": [
                "string",
                "null"
              ]
            },
            "openShiftoAuth": {
              "description": "Deprecated. The value of this flag is ignored.\nEnables the integration of the identity provider (Keycloak / RHSSO) with OpenShift OAuth.\nEmpty value on OpenShift by default. This will allow users to directly login with their OpenShift user through the OpenShift login,\nand have their workspaces created under personal OpenShift namespaces.\nWARNING: the `kubeadmin` user is NOT supported, and logging through it will NOT allow accessing the Che Dashboard.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "updateAdminPassword": {
              "description": "Deprecated. The value of this flag is ignored.\nForces the default `admin` Che user to update password on first login. Defaults to `false`.",
              "type": [
                "boolean",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "dashboard": {
          "description": "Configuration settings related to the User Dashboard used by the Che installation.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "warning": {
              "description": "Warning message that will be displayed on the User Dashboard",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "database": {
          "description": "Configuration settings related to the database used by the Che installation.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "chePostgresContainerResources": {
              "description": "PostgreSQL container custom settings",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "limits": {
                  "description": "Limits describes the maximum amount of compute resources allowed.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "cpu": {
                      "description": "CPU, in cores. (500m = .5 cores)",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "memory": {
                      "description": "Memory, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "request": {
                  "description": "Requests describes the minimum amount of compute resources required.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "cpu": {
                      "description": "CPU, in cores. (500m = .5 cores)",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "memory": {
                      "description": "Memory, in bytes. (500Gi = 500GiB = 500 * 1024 * 1024 * 1024)",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "chePostgresDb": {
              "description": "PostgreSQL database name that the Che server uses to connect to the DB. Defaults to `dbche`.",
              "type": [
                "string",
                "null"
              ]
            },
            "chePostgresHostName": {
              "description": "PostgreSQL Database host name that the Che server uses to connect to.\nDefaults is `postgres`. Override this value ONLY when using an external database. See field `externalDb`.\nIn the default case it will be automatically set by the Operator.",
              "type": [
                "string",
                "null"
              ]
            },
            "chePostgresPassword": {
              "description": "PostgreSQL password that the Che server uses to connect to the DB. When omitted or left blank, it will be set to an automatically generated value.",
              "type": [
                "string",
                "null"
              ]
            },
            "chePostgresPort": {
              "description": "PostgreSQL Database port that the Che server uses to connect to. Defaults to 5432.\nOverride this value ONLY when using an external database. See field `externalDb`. In the default case it will be automatically set by the Operator.",
              "type": [
                "string",
                "null"
              ]
            },
            "chePostgresSecret": {
              "description": "The secret that contains PostgreSQL`user` and `password` that the Che server uses to connect to the DB.\nWhen the secret is defined, the `chePostgresUser` and `chePostgresPassword` are ignored.\nWhen the value is omitted or left blank, the one of following scenarios applies:\n1. `chePostgresUser` and `chePostgresPassword` are defined, then they will be used to connect to the DB.\n2. `chePostgresUser` or `chePostgresPassword` are not defined, then a new secret with the name `postgres-credentials`\nwill be created with default value of `pgche` for `user` and with an auto-generated value for `password`.\nThe secret must have `app.kubernetes.io/part-of=che.eclipse.org` label.",
              "type": [
                "string",
                "null"
              ]
            },
            "chePostgresUser": {
              "description": "PostgreSQL user that the Che server uses to connect to the DB. Defaults to `pgche`.",
              "type": [
                "string",
                "null"
              ]
            },
            "externalDb": {
              "description": "Instructs the Operator on whether to deploy a dedicated database.\nBy default, a dedicated PostgreSQL database is deployed as part of the Che installation. When `externalDb` is `true`, no dedicated database will be deployed by the\nOperator and you will need to provide connection details to the external DB you are about to use. See also all the fields starting with: `chePostgres`.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "postgresEnv": {
              "description": "List of environment variables to set in the PostgreSQL container.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "EnvVar represents an environment variable present in a Container.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "valueFrom": {
                    "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "configMapKeyRef": {
                        "description": "Selects a key of a ConfigMap.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "fieldRef": {
                        "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "fieldPath"
                        ],
                        "properties": {
                          "apiVersion": {
                            "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "fieldPath": {
                            "description": "Path of the field to select in the specified API version.",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "resourceFieldRef": {
                        "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "resource"
                        ],
                        "properties": {
                          "containerName": {
                            "description": "Container name: required for volumes, optional for env vars",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "divisor": {
                            "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          },
                          "resource": {
                            "description": "Required: resource to select",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "secretKeyRef": {
                        "description": "Selects a key of a secret in the pod's namespace",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "postgresImage": {
              "description": "Overrides the container image used in the PostgreSQL database deployment. This includes the image tag. Omit it or leave it empty to use the default container image provided by the Operator.",
              "type": [
                "string",
                "null"
              ]
            },
            "postgresImagePullPolicy": {
              "description": "Overrides the image pull policy used in the PostgreSQL database deployment. Default value is `Always` for `nightly`, `next` or `latest` images, and `IfNotPresent` in other cases.",
              "type": [
                "string",
                "null"
              ]
            },
            "postgresVersion": {
              "description": "Indicates a PostgreSQL version image to use. Allowed values are: `9.6` and `13.3`.\nMigrate your PostgreSQL database to switch from one version to another.",
              "type": [
                "string",
                "null"
              ]
            },
            "pvcClaimSize": {
              "description": "Size of the persistent volume claim for database. Defaults to `1Gi`.\nTo update pvc storageclass that provisions it must support resize when Eclipse Che has been already deployed.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "devWorkspace": {
          "description": "DevWorkspace operator configuration",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "enable"
          ],
          "properties": {
            "controllerImage": {
              "description": "Overrides the container image used in the DevWorkspace controller deployment.\nThis includes the image tag. Omit it or leave it empty to use the default container image provided by the Operator.",
              "type": [
                "string",
                "null"
              ]
            },
            "enable": {
              "description": "Deploys the DevWorkspace Operator in the cluster.\nDoes nothing when a matching version of the Operator is already installed.\nFails when a non-matching version of the Operator is already installed.",
              "type": "boolean"
            },
            "env": {
              "description": "List of environment variables to set in the DevWorkspace container.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "EnvVar represents an environment variable present in a Container.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "valueFrom": {
                    "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "configMapKeyRef": {
                        "description": "Selects a key of a ConfigMap.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "fieldRef": {
                        "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "fieldPath"
                        ],
                        "properties": {
                          "apiVersion": {
                            "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "fieldPath": {
                            "description": "Path of the field to select in the specified API version.",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "resourceFieldRef": {
                        "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "resource"
                        ],
                        "properties": {
                          "containerName": {
                            "description": "Container name: required for volumes, optional for env vars",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "divisor": {
                            "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          },
                          "resource": {
                            "description": "Required: resource to select",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "secretKeyRef": {
                        "description": "Selects a key of a secret in the pod's namespace",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "runningLimit": {
              "description": "Maximum number of the running workspaces per user.",
              "type": [
                "string",
                "null"
              ]
            },
            "secondsOfInactivityBeforeIdling": {
              "description": "Idle timeout for workspaces in seconds.\nThis timeout is the duration after which a workspace will be idled if there is no activity.\nTo disable workspace idling due to inactivity, set this value to -1.",
              "type": [
                "integer",
                "null"
              ],
              "format": "int32"
            },
            "secondsOfRunBeforeIdling": {
              "description": "Run timeout for workspaces in seconds.\nThis timeout is the maximum duration a workspace runs.\nTo disable workspace run timeout, set this value to -1.",
              "type": [
                "integer",
                "null"
              ],
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "gitServices": {
          "description": "A configuration that allows users to work with remote Git repositories.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "bitbucket": {
              "description": "Enables users to work with repositories hosted on Bitbucket (bitbucket.org or self-hosted).",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "BitBucketService enables users to work with repositories hosted on Bitbucket (bitbucket.org or self-hosted).",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "secretName"
                ],
                "properties": {
                  "endpoint": {
                    "description": "Bitbucket server endpoint URL.\nDeprecated in favor of `che.eclipse.org/scm-server-endpoint` annotation.\nSee the following page: https://www.eclipse.org/che/docs/stable/administration-guide/configuring-oauth-1-for-a-bitbucket-server/.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "secretName": {
                    "description": "Kubernetes secret, that contains Base64-encoded Bitbucket OAuth 1.0 or OAuth 2.0 data.\nSee the following pages for details: https://www.eclipse.org/che/docs/stable/administration-guide/configuring-oauth-1-for-a-bitbucket-server/\nand https://www.eclipse.org/che/docs/stable/administration-guide/configuring-oauth-2-for-the-bitbucket-cloud/.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "github": {
              "description": "Enables users to work with repositories hosted on GitHub (github.com or GitHub Enterprise).",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "GitHubService enables users to work with repositories hosted on GitHub (GitHub.com or GitHub Enterprise).",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "secretName"
                ],
                "properties": {
                  "endpoint": {
                    "description": "GitHub server endpoint URL.\nDeprecated in favor of `che.eclipse.org/scm-server-endpoint` annotation.\nSee the following page for details: https://www.eclipse.org/che/docs/stable/administration-guide/configuring-oauth-2-for-github/.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "secretName": {
                    "description": "Kubernetes secret, that contains Base64-encoded GitHub OAuth Client id and GitHub OAuth Client secret.\nSee the following page for details: https://www.eclipse.org/che/docs/stable/administration-guide/configuring-oauth-2-for-github/.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "gitlab": {
              "description": "Enables users to work with repositories hosted on GitLab (gitlab.com or self-hosted).",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "GitLabService enables users to work with repositories hosted on GitLab (gitlab.com or self-hosted).",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "secretName"
                ],
                "properties": {
                  "endpoint": {
                    "description": "GitLab server endpoint URL.\nDeprecated in favor of `che.eclipse.org/scm-server-endpoint` annotation.\nSee the following page: https://www.eclipse.org/che/docs/stable/administration-guide/configuring-oauth-2-for-gitlab/.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "secretName": {
                    "description": "Kubernetes secret, that contains Base64-encoded GitHub Application id and GitLab Application Client secret.\nSee the following page: https://www.eclipse.org/che/docs/stable/administration-guide/configuring-oauth-2-for-gitlab/.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "imagePuller": {
          "description": "Kubernetes Image Puller configuration",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "enable"
          ],
          "properties": {
            "enable": {
              "description": "Install and configure the Community Supported Kubernetes Image Puller Operator. When set to `true` and no spec is provided,\nit will create a default KubernetesImagePuller object to be managed by the Operator.\nWhen set to `false`, the KubernetesImagePuller object will be deleted, and the Operator will be uninstalled,\nregardless of whether a spec is provided.\nIf the `spec.images` field is empty, a set of recommended workspace-related images will be automatically detected and\npre-pulled after installation.\nNote that while this Operator and its behavior is community-supported, its payload may be commercially-supported\nfor pulling commercially-supported images.",
              "type": "boolean"
            },
            "spec": {
              "description": "A KubernetesImagePullerSpec to configure the image puller in the CheCluster",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "affinity": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "cachingCPULimit": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "cachingCPURequest": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "cachingIntervalHours": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "cachingMemoryLimit": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "cachingMemoryRequest": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "configMapName": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "daemonsetName": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "deploymentName": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "imagePullSecrets": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "imagePullerImage": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "images": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "nodeSelector": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "k8s": {
          "description": "Configuration settings specific to Che installations made on upstream Kubernetes.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "ingressClass": {
              "description": "Ingress class that will define the which controller will manage ingresses. Defaults to `nginx`.\nNB: This drives the `kubernetes.io/ingress.class` annotation on Che-related ingresses.",
              "type": [
                "string",
                "null"
              ]
            },
            "ingressDomain": {
              "description": "Global ingress domain for a Kubernetes cluster. This MUST be explicitly specified: there are no defaults.",
              "type": [
                "string",
                "null"
              ]
            },
            "ingressStrategy": {
              "description": "Deprecated. The value of this flag is ignored.\nStrategy for ingress creation. Options are: `multi-host` (host is explicitly provided in ingress),\n`single-host` (host is provided, path-based rules) and `default-host` (no host is provided, path-based rules).\nDefaults to `multi-host` Deprecated in favor of `serverExposureStrategy` in the `server` section,\nwhich defines this regardless of the cluster type. When both are defined, the `serverExposureStrategy` option takes precedence.",
              "type": [
                "string",
                "null"
              ]
            },
            "securityContextFsGroup": {
              "description": "The FSGroup in which the Che Pod and workspace Pods containers runs in. Default value is `1724`.",
              "type": [
                "string",
                "null"
              ]
            },
            "securityContextRunAsUser": {
              "description": "ID of the user the Che Pod and workspace Pods containers run as. Default value is `1724`.",
              "type": [
                "string",
                "null"
              ]
            },
            "singleHostExposureType": {
              "description": "Deprecated. The value of this flag is ignored.\nWhen the serverExposureStrategy is set to `single-host`, the way the server, registries and workspaces are exposed is further configured by this property.\nThe possible values are `native`, which means that the server and workspaces are exposed using ingresses on K8s\nor `gateway` where the server and workspaces are exposed using a custom gateway based on link:https://doc.traefik.io/traefik/[Traefik].\nAll the endpoints whether backed by the ingress or gateway `route` always point to the subpaths on the same domain. Defaults to `native`.",
              "type": [
                "string",
                "null"
              ]
            },
            "tlsSecretName": {
              "description": "Name of a secret that will be used to setup ingress TLS termination when TLS is enabled.\nWhen the field is empty string, the default cluster certificate will be used. See also the `tlsSupport` field.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "metrics": {
          "description": "Configuration settings related to the metrics collection used by the Che installation.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "enable": {
              "description": "Enables `metrics` the Che server endpoint. Default to `true`.",
              "type": [
                "boolean",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "server": {
          "description": "General configuration settings related to the Che server, the plugin and devfile registries",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "airGapContainerRegistryHostname": {
              "description": "Optional host name, or URL, to an alternate container registry to pull images from.\nThis value overrides the container registry host name defined in all the default container images involved in a Che deployment.\nThis is particularly useful to install Che in a restricted environment.",
              "type": [
                "string",
                "null"
              ]
            },
            "airGapContainerRegistryOrganization": {
              "description": "Optional repository name of an alternate container registry to pull images from.\nThis value overrides the container registry organization defined in all the default container images involved in a Che deployment.\nThis is particularly useful to install Eclipse Che in a restricted environment.",
              "type": [
                "string",
                "null"
              ]
            },
            "allowAutoProvisionUserNamespace": {
              "description": "Indicates if is allowed to automatically create a user namespace.\nIf it set to false, then user namespace must be pre-created by a cluster administrator.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "allowUserDefinedWorkspaceNamespaces": {
              "description": "Deprecated. The value of this flag is ignored.\nDefines that a user is allowed to specify a Kubernetes namespace, or an OpenShift project, which differs from the default.\nIt's NOT RECOMMENDED to set to `true` without OpenShift OAuth configured. The OpenShift infrastructure also uses this property.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "cheClusterRoles": {
              "description": "A comma-separated list of ClusterRoles that will be assigned to Che ServiceAccount.\nEach role must have `app.kubernetes.io/part-of=che.eclipse.org` label.\nBe aware that the Che Operator has to already have all permissions in these ClusterRoles to grant them.",
              "type": [
                "string",
                "null"
              ]
            },
            "cheDebug": {
              "description": "Enables the debug mode for Che server. Defaults to `false`.",
              "type": [
                "string",
                "null"
              ]
            },
            "cheFlavor": {
              "description": "Deprecated. The value of this flag is ignored.\nSpecifies a variation of the installation. The options are  `che` for upstream Che installations or\n`devspaces` for Red Hat OpenShift Dev Spaces (formerly Red Hat CodeReady Workspaces) installation",
              "type": [
                "string",
                "null"
              ]
            },
            "cheHost": {
              "description": "Public host name of the installed Che server. When value is omitted, the value it will be automatically set by the Operator.\nSee the `cheHostTLSSecret` field.",
              "type": [
                "string",
                "null"
              ]
            },
            "cheHostTLSSecret": {
              "description": "Name of a secret containing certificates to secure ingress or route for the custom host name of the installed Che server.\nThe secret must have `app.kubernetes.io/part-of=che.eclipse.org` label.\nSee the `cheHost` field.",
              "type": [
                "string",
                "null"
              ]
            },
            "cheImage": {
              "description": "Overrides the container image used in Che deployment. This does NOT include the container image tag.\nOmit it or leave it empty to use the default container image provided by the Operator.",
              "type": [
                "string",
                "null"
              ]
            },
            "cheImagePullPolicy": {
              "description": "Overrides the image pull policy used in Che deployment.\nDefault value is `Always` for `nightly`, `next` or `latest` images, and `IfNotPresent` in other cases.",
              "type": [
                "string",
                "null"
              ]
            },
            "cheImageTag": {
              "description": "Overrides the tag of the container image used in Che deployment.\nOmit it or leave it empty to use the default image tag provided by the Operator.",
              "type": [
                "string",
                "null"
              ]
            },
            "cheLogLevel": {
              "description": "Log level for the Che server: `INFO` or `DEBUG`. Defaults to `INFO`.",
              "type": [
                "string",
                "null"
              ]
            },
            "cheServerEnv": {
              "description": "List of environment variables to set in the Che server container.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "EnvVar represents an environment variable present in a Container.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "valueFrom": {
                    "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "configMapKeyRef": {
                        "description": "Selects a key of a ConfigMap.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "fieldRef": {
                        "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "fieldPath"
                        ],
                        "properties": {
                          "apiVersion": {
                            "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "fieldPath": {
                            "description": "Path of the field to select in the specified API version.",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "resourceFieldRef": {
                        "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "resource"
                        ],
                        "properties": {
                          "containerName": {
                            "description": "Container name: required for volumes, optional for env vars",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "divisor": {
                            "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          },
                          "resource": {
                            "description": "Required: resource to select",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "secretKeyRef": {
                        "description": "Selects a key of a secret in the pod's namespace",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "cheServerIngress": {
              "description": "The Che server ingress custom settings.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "annotations": {
                  "description": "Unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "labels": {
                  "description": "Comma separated list of labels that can be used to organize and categorize objects by scoping and selecting.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "cheServerRoute": {
              "description": "The Che server route custom settings.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "annotations": {
                  "description": "Unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "domain": {
                  "description": "Operator uses the domain to generate a hostname for a route.\nIn a conjunction with labels it creates a route, which is served by a non-default Ingress controller.\nThe generated host name will follow this pattern: `<route-name>-<route-namespace>.<domain>`.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "labels": {
                  "description": "Comma separated list of labels that can be used to organize and categorize objects by scoping and selecting.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "cheWorkspaceClusterRole": {
              "description": "Custom cluster role bound to the user for the Che workspaces.\nThe role must have `app.kubernetes.io/part-of=che.eclipse.org` label.\nThe default roles are used when omitted or left blank.",
              "type": [
                "string",
                "null"
              ]
            },
            "customCheProperties": {
              "description": "Map of additional environment variables that will be applied in the generated `che` ConfigMap to be used by the Che server,\nin addition to the values already generated from other fields of the `CheCluster` custom resource (CR).\nWhen `customCheProperties` contains a property that would be normally generated in `che` ConfigMap from other CR fields,\nthe value defined in the `customCheProperties` is used instead.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "dashboardCpuLimit": {
              "description": "Overrides the CPU limit used in the dashboard deployment.\nIn cores. (500m = .5 cores). Default to 500m.",
              "type": [
                "string",
                "null"
              ]
            },
            "dashboardCpuRequest": {
              "description": "Overrides the CPU request used in the dashboard deployment.\nIn cores. (500m = .5 cores). Default to 100m.",
              "type": [
                "string",
                "null"
              ]
            },
            "dashboardEnv": {
              "description": "List of environment variables to set in the dashboard container.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "EnvVar represents an environment variable present in a Container.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "valueFrom": {
                    "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "configMapKeyRef": {
                        "description": "Selects a key of a ConfigMap.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "fieldRef": {
                        "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "fieldPath"
                        ],
                        "properties": {
                          "apiVersion": {
                            "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "fieldPath": {
                            "description": "Path of the field to select in the specified API version.",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "resourceFieldRef": {
                        "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "resource"
                        ],
                        "properties": {
                          "containerName": {
                            "description": "Container name: required for volumes, optional for env vars",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "divisor": {
                            "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          },
                          "resource": {
                            "description": "Required: resource to select",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "secretKeyRef": {
                        "description": "Selects a key of a secret in the pod's namespace",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "dashboardImage": {
              "description": "Overrides the container image used in the dashboard deployment.\nThis includes the image tag. Omit it or leave it empty to use the default container image provided by the Operator.",
              "type": [
                "string",
                "null"
              ]
            },
            "dashboardImagePullPolicy": {
              "description": "Overrides the image pull policy used in the dashboard deployment.\nDefault value is `Always` for `nightly`, `next` or `latest` images, and `IfNotPresent` in other cases.",
              "type": [
                "string",
                "null"
              ]
            },
            "dashboardIngress": {
              "description": "Deprecated. The value of this flag is ignored.\nDashboard ingress custom settings.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "annotations": {
                  "description": "Unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "labels": {
                  "description": "Comma separated list of labels that can be used to organize and categorize objects by scoping and selecting.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "dashboardMemoryLimit": {
              "description": "Overrides the memory limit used in the dashboard deployment. Defaults to 256Mi.",
              "type": [
                "string",
                "null"
              ]
            },
            "dashboardMemoryRequest": {
              "description": "Overrides the memory request used in the dashboard deployment. Defaults to 16Mi.",
              "type": [
                "string",
                "null"
              ]
            },
            "dashboardRoute": {
              "description": "Deprecated. The value of this flag is ignored.\nDashboard route custom settings.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "annotations": {
                  "description": "Unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "domain": {
                  "description": "Operator uses the domain to generate a hostname for a route.\nIn a conjunction with labels it creates a route, which is served by a non-default Ingress controller.\nThe generated host name will follow this pattern: `<route-name>-<route-namespace>.<domain>`.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "labels": {
                  "description": "Comma separated list of labels that can be used to organize and categorize objects by scoping and selecting.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "devfileRegistryCpuLimit": {
              "description": "Overrides the CPU limit used in the devfile registry deployment.\nIn cores. (500m = .5 cores). Default to 500m.",
              "type": [
                "string",
                "null"
              ]
            },
            "devfileRegistryCpuRequest": {
              "description": "Overrides the CPU request used in the devfile registry deployment.\nIn cores. (500m = .5 cores). Default to 100m.",
              "type": [
                "string",
                "null"
              ]
            },
            "devfileRegistryEnv": {
              "description": "List of environment variables to set in the plugin registry container.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "EnvVar represents an environment variable present in a Container.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "valueFrom": {
                    "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "configMapKeyRef": {
                        "description": "Selects a key of a ConfigMap.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "fieldRef": {
                        "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "fieldPath"
                        ],
                        "properties": {
                          "apiVersion": {
                            "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "fieldPath": {
                            "description": "Path of the field to select in the specified API version.",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "resourceFieldRef": {
                        "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "resource"
                        ],
                        "properties": {
                          "containerName": {
                            "description": "Container name: required for volumes, optional for env vars",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "divisor": {
                            "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          },
                          "resource": {
                            "description": "Required: resource to select",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "secretKeyRef": {
                        "description": "Selects a key of a secret in the pod's namespace",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "devfileRegistryImage": {
              "description": "Overrides the container image used in the devfile registry deployment.\nThis includes the image tag. Omit it or leave it empty to use the default container image provided by the Operator.",
              "type": [
                "string",
                "null"
              ]
            },
            "devfileRegistryIngress": {
              "description": "Deprecated. The value of this flag is ignored.\nThe devfile registry ingress custom settings.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "annotations": {
                  "description": "Unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "labels": {
                  "description": "Comma separated list of labels that can be used to organize and categorize objects by scoping and selecting.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "devfileRegistryMemoryLimit": {
              "description": "Overrides the memory limit used in the devfile registry deployment. Defaults to 256Mi.",
              "type": [
                "string",
                "null"
              ]
            },
            "devfileRegistryMemoryRequest": {
              "description": "Overrides the memory request used in the devfile registry deployment. Defaults to 16Mi.",
              "type": [
                "string",
                "null"
              ]
            },
            "devfileRegistryPullPolicy": {
              "description": "Overrides the image pull policy used in the devfile registry deployment.\nDefault value is `Always` for `nightly`, `next` or `latest` images, and `IfNotPresent` in other cases.",
              "type": [
                "string",
                "null"
              ]
            },
            "devfileRegistryRoute": {
              "description": "Deprecated. The value of this flag is ignored.\nThe devfile registry route custom settings.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "annotations": {
                  "description": "Unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "domain": {
                  "description": "Operator uses the domain to generate a hostname for a route.\nIn a conjunction with labels it creates a route, which is served by a non-default Ingress controller.\nThe generated host name will follow this pattern: `<route-name>-<route-namespace>.<domain>`.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "labels": {
                  "description": "Comma separated list of labels that can be used to organize and categorize objects by scoping and selecting.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "devfileRegistryUrl": {
              "description": "Deprecated in favor of `externalDevfileRegistries` fields.",
              "type": [
                "string",
                "null"
              ]
            },
            "disableInternalClusterSVCNames": {
              "description": "Deprecated. The value of this flag is ignored.\nDisable internal cluster SVC names usage to communicate between components to speed up the traffic and avoid proxy issues.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "externalDevfileRegistries": {
              "description": "External devfile registries, that serves sample, ready-to-use devfiles.\nConfigure this in addition to a dedicated devfile registry (when `externalDevfileRegistry` is `false`)\nor instead of it (when `externalDevfileRegistry` is `true`)",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "Settings for a configuration of the external devfile registries.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "url": {
                    "description": "Public URL of the devfile registry.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              }
            },
            "externalDevfileRegistry": {
              "description": "Instructs the Operator on whether to deploy a dedicated devfile registry server.\nBy default, a dedicated devfile registry server is started. When `externalDevfileRegistry` is `true`,\nno such dedicated server will be started by the Operator and configure at least one\ndevfile registry with `externalDevfileRegistries` field.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "externalPluginRegistry": {
              "description": "Instructs the Operator on whether to deploy a dedicated plugin registry server.\nBy default, a dedicated plugin registry server is started. When `externalPluginRegistry` is `true`, no such dedicated server\nwill be started by the Operator and you will have to manually set the `pluginRegistryUrl` field.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "gitSelfSignedCert": {
              "description": "When enabled, the certificate from `che-git-self-signed-cert` ConfigMap will be propagated to the Che components and provide particular configuration for Git.\nNote, the `che-git-self-signed-cert` ConfigMap must have `app.kubernetes.io/part-of=che.eclipse.org` label.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "nonProxyHosts": {
              "description": "List of hosts that will be reached directly, bypassing the proxy.\nSpecify wild card domain use the following form `.<DOMAIN>` and `|` as delimiter, for example: `localhost|.my.host.com|123.42.12.32`\nOnly use when configuring a proxy is required. Operator respects OpenShift cluster wide proxy configuration and no additional configuration is required,\nbut defining `nonProxyHosts` in a custom resource leads to merging non proxy hosts lists from the cluster proxy configuration and ones defined in the custom resources.\nSee the doc https://docs.openshift.com/container-platform/4.4/networking/enable-cluster-wide-proxy.html. See also the `proxyURL` fields.",
              "type": [
                "string",
                "null"
              ]
            },
            "openVSXRegistryURL": {
              "description": "Open VSX registry URL. If omitted an embedded instance will be used.",
              "type": [
                "string",
                "null"
              ]
            },
            "pluginRegistryCpuLimit": {
              "description": "Overrides the CPU limit used in the plugin registry deployment.\nIn cores. (500m = .5 cores). Default to 500m.",
              "type": [
                "string",
                "null"
              ]
            },
            "pluginRegistryCpuRequest": {
              "description": "Overrides the CPU request used in the plugin registry deployment.\nIn cores. (500m = .5 cores). Default to 100m.",
              "type": [
                "string",
                "null"
              ]
            },
            "pluginRegistryEnv": {
              "description": "List of environment variables to set in the devfile registry container.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "EnvVar represents an environment variable present in a Container.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "valueFrom": {
                    "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "configMapKeyRef": {
                        "description": "Selects a key of a ConfigMap.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "fieldRef": {
                        "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "fieldPath"
                        ],
                        "properties": {
                          "apiVersion": {
                            "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "fieldPath": {
                            "description": "Path of the field to select in the specified API version.",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "resourceFieldRef": {
                        "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "resource"
                        ],
                        "properties": {
                          "containerName": {
                            "description": "Container name: required for volumes, optional for env vars",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "divisor": {
                            "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          },
                          "resource": {
                            "description": "Required: resource to select",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "secretKeyRef": {
                        "description": "Selects a key of a secret in the pod's namespace",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "pluginRegistryImage": {
              "description": "Overrides the container image used in the plugin registry deployment.\nThis includes the image tag. Omit it or leave it empty to use the default container image provided by the Operator.",
              "type": [
                "string",
                "null"
              ]
            },
            "pluginRegistryIngress": {
              "description": "Deprecated. The value of this flag is ignored.\nPlugin registry ingress custom settings.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "annotations": {
                  "description": "Unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "labels": {
                  "description": "Comma separated list of labels that can be used to organize and categorize objects by scoping and selecting.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "pluginRegistryMemoryLimit": {
              "description": "Overrides the memory limit used in the plugin registry deployment. Defaults to 1536Mi.",
              "type": [
                "string",
                "null"
              ]
            },
            "pluginRegistryMemoryRequest": {
              "description": "Overrides the memory request used in the plugin registry deployment. Defaults to 16Mi.",
              "type": [
                "string",
                "null"
              ]
            },
            "pluginRegistryPullPolicy": {
              "description": "Overrides the image pull policy used in the plugin registry deployment.\nDefault value is `Always` for `nightly`, `next` or `latest` images, and `IfNotPresent` in other cases.",
              "type": [
                "string",
                "null"
              ]
            },
            "pluginRegistryRoute": {
              "description": "Deprecated. The value of this flag is ignored.\nPlugin registry route custom settings.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "annotations": {
                  "description": "Unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "domain": {
                  "description": "Operator uses the domain to generate a hostname for a route.\nIn a conjunction with labels it creates a route, which is served by a non-default Ingress controller.\nThe generated host name will follow this pattern: `<route-name>-<route-namespace>.<domain>`.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "labels": {
                  "description": "Comma separated list of labels that can be used to organize and categorize objects by scoping and selecting.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "pluginRegistryUrl": {
              "description": "Public URL of the plugin registry that serves sample ready-to-use devfiles.\nSet this ONLY when a use of an external devfile registry is needed.\nSee the `externalPluginRegistry` field. By default, this will be automatically calculated by the Operator.",
              "type": [
                "string",
                "null"
              ]
            },
            "proxyPassword": {
              "description": "Password of the proxy server.\nOnly use when proxy configuration is required. See the `proxyURL`, `proxyUser` and `proxySecret` fields.",
              "type": [
                "string",
                "null"
              ]
            },
            "proxyPort": {
              "description": "Port of the proxy server. Only use when configuring a proxy is required. See also the `proxyURL` and `nonProxyHosts` fields.",
              "type": [
                "string",
                "null"
              ]
            },
            "proxySecret": {
              "description": "The secret that contains `user` and `password` for a proxy server. When the secret is defined, the `proxyUser` and `proxyPassword` are ignored.\nThe secret must have `app.kubernetes.io/part-of=che.eclipse.org` label.",
              "type": [
                "string",
                "null"
              ]
            },
            "proxyURL": {
              "description": "URL (protocol+host name) of the proxy server. This drives the appropriate changes in the `JAVA_OPTS` and `https(s)_proxy` variables\nin the Che server and workspaces containers.\nOnly use when configuring a proxy is required. Operator respects OpenShift cluster wide proxy configuration\nand no additional configuration is required, but defining `proxyUrl` in a custom resource leads to overrides the cluster proxy configuration\nwith fields `proxyUrl`, `proxyPort`, `proxyUser` and `proxyPassword` from the custom resource.\nSee the doc https://docs.openshift.com/container-platform/4.4/networking/enable-cluster-wide-proxy.html. See also the `proxyPort` and `nonProxyHosts` fields.",
              "type": [
                "string",
                "null"
              ]
            },
            "proxyUser": {
              "description": "User name of the proxy server. Only use when configuring a proxy is required. See also the `proxyURL`, `proxyPassword` and `proxySecret` fields.",
              "type": [
                "string",
                "null"
              ]
            },
            "selfSignedCert": {
              "description": "Deprecated. The value of this flag is ignored.\nThe Che Operator will automatically detect whether the router certificate is self-signed and propagate it to other components, such as the Che server.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "serverCpuLimit": {
              "description": "Overrides the CPU limit used in the Che server deployment\nIn cores. (500m = .5 cores). Default to 1.",
              "type": [
                "string",
                "null"
              ]
            },
            "serverCpuRequest": {
              "description": "Overrides the CPU request used in the Che server deployment\nIn cores. (500m = .5 cores). Default to 100m.",
              "type": [
                "string",
                "null"
              ]
            },
            "serverExposureStrategy": {
              "description": "Deprecated. The value of this flag is ignored.\nSets the server and workspaces exposure type.\nPossible values are `multi-host`, `single-host`, `default-host`. Defaults to `multi-host`, which creates a separate ingress, or OpenShift routes, for every required endpoint.\n`single-host` makes Che exposed on a single host name with workspaces exposed on subpaths.\nRead the docs to learn about the limitations of this approach.\nAlso consult the `singleHostExposureType` property to further configure how the Operator and the Che server make that happen on Kubernetes.\n`default-host` exposes the Che server on the host of the cluster. Read the docs to learn about the limitations of this approach.",
              "type": [
                "string",
                "null"
              ]
            },
            "serverMemoryLimit": {
              "description": "Overrides the memory limit used in the Che server deployment. Defaults to 1Gi.",
              "type": [
                "string",
                "null"
              ]
            },
            "serverMemoryRequest": {
              "description": "Overrides the memory request used in the Che server deployment. Defaults to 512Mi.",
              "type": [
                "string",
                "null"
              ]
            },
            "serverTrustStoreConfigMapName": {
              "description": "Name of the ConfigMap with public certificates to add to Java trust store of the Che server.\nThis is often required when adding the OpenShift OAuth provider, which has HTTPS endpoint signed with self-signed cert.\nThe Che server must be aware of its CA cert to be able to request it. This is disabled by default.\nThe Config Map must have `app.kubernetes.io/part-of=che.eclipse.org` label.",
              "type": [
                "string",
                "null"
              ]
            },
            "singleHostGatewayConfigMapLabels": {
              "description": "The labels that need to be present in the ConfigMaps representing the gateway configuration.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "singleHostGatewayConfigSidecarImage": {
              "description": "The image used for the gateway sidecar that provides configuration to the gateway. Omit it or leave it empty to use the default container image provided by the Operator.",
              "type": [
                "string",
                "null"
              ]
            },
            "singleHostGatewayImage": {
              "description": "The image used for the gateway in the single host mode. Omit it or leave it empty to use the default container image provided by the Operator.",
              "type": [
                "string",
                "null"
              ]
            },
            "tlsSupport": {
              "description": "Deprecated. Instructs the Operator to deploy Che in TLS mode. This is enabled by default. Disabling TLS sometimes cause malfunction of some Che components.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "useInternalClusterSVCNames": {
              "description": "Deprecated in favor of `disableInternalClusterSVCNames`.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "workspaceDefaultComponents": {
              "description": "Default components applied to DevWorkspaces.\nThese default components are meant to be used when a Devfile does not contain any components.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "name"
                ],
                "properties": {
                  "attributes": {
                    "description": "Map of implementation-dependant free-form YAML attributes.",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "componentType": {
                    "description": "Type of component",
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "Container",
                      "Kubernetes",
                      "Openshift",
                      "Volume",
                      "Image",
                      "Plugin",
                      "Custom"
                    ]
                  },
                  "container": {
                    "description": "Allows adding and configuring devworkspace-related containers",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "image"
                    ],
                    "properties": {
                      "annotation": {
                        "description": "Annotations that should be added to specific resources for this container",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "deployment": {
                            "description": "Annotations to be added to deployment",
                            "type": [
                              "object",
                              "null"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "service": {
                            "description": "Annotations to be added to service",
                            "type": [
                              "object",
                              "null"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "args": {
                        "description": "The arguments to supply to the command running the dockerimage component. The arguments are supplied either to the default command provided in the image or to the overridden command.\n\n\nDefaults to an empty array, meaning use whatever is defined in the image.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "command": {
                        "description": "The command to run in the dockerimage component instead of the default one provided in the image.\n\n\nDefaults to an empty array, meaning use whatever is defined in the image.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "cpuLimit": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "cpuRequest": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "dedicatedPod": {
                        "description": "Specify if a container should run in its own separated pod,\ninstead of running as part of the main development environment pod.\n\n\nDefault value is `false`",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "endpoints": {
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "name",
                            "targetPort"
                          ],
                          "properties": {
                            "annotation": {
                              "description": "Annotations to be added to Kubernetes Ingress or Openshift Route",
                              "type": [
                                "object",
                                "null"
                              ],
                              "additionalProperties": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "attributes": {
                              "description": "Map of implementation-dependant string-based free-form attributes.\n\n\nExamples of Che-specific attributes:\n\n\n- cookiesAuthEnabled: \"true\" / \"false\",\n\n\n- type: \"terminal\" / \"ide\" / \"ide-dev\",",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "exposure": {
                              "description": "Describes how the endpoint should be exposed on the network.\n\n\n- `public` means that the endpoint will be exposed on the public network, typically through\na K8S ingress or an OpenShift route.\n\n\n- `internal` means that the endpoint will be exposed internally outside of the main devworkspace POD,\ntypically by K8S services, to be consumed by other elements running\non the same cloud internal network.\n\n\n- `none` means that the endpoint will not be exposed and will only be accessible\ninside the main devworkspace POD, on a local address.\n\n\nDefault value is `public`",
                              "type": [
                                "string",
                                "null"
                              ],
                              "enum": [
                                "public",
                                "internal",
                                "none"
                              ]
                            },
                            "name": {
                              "type": "string",
                              "maxLength": 63,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                            },
                            "path": {
                              "description": "Path of the endpoint URL",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "protocol": {
                              "description": "Describes the application and transport protocols of the traffic that will go through this endpoint.\n\n\n- `http`: Endpoint will have `http` traffic, typically on a TCP connection.\nIt will be automaticaly promoted to `https` when the `secure` field is set to `true`.\n\n\n- `https`: Endpoint will have `https` traffic, typically on a TCP connection.\n\n\n- `ws`: Endpoint will have `ws` traffic, typically on a TCP connection.\nIt will be automaticaly promoted to `wss` when the `secure` field is set to `true`.\n\n\n- `wss`: Endpoint will have `wss` traffic, typically on a TCP connection.\n\n\n- `tcp`: Endpoint will have traffic on a TCP connection, without specifying an application protocol.\n\n\n- `udp`: Endpoint will have traffic on an UDP connection, without specifying an application protocol.\n\n\nDefault value is `http`",
                              "type": [
                                "string",
                                "null"
                              ],
                              "enum": [
                                "http",
                                "https",
                                "ws",
                                "wss",
                                "tcp",
                                "udp"
                              ]
                            },
                            "secure": {
                              "description": "Describes whether the endpoint should be secured and protected by some\nauthentication process. This requires a protocol of `https` or `wss`.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "targetPort": {
                              "description": "Port number to be used within the container component. The same port cannot\nbe used by two different container components.",
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "env": {
                        "description": "Environment variables used in this container.\n\n\nThe following variables are reserved and cannot be overridden via env:\n\n\n - `$PROJECTS_ROOT`\n\n\n - `$PROJECT_SOURCE`",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "name",
                            "value"
                          ],
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "image": {
                        "type": "string"
                      },
                      "memoryLimit": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "memoryRequest": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "mountSources": {
                        "description": "Toggles whether or not the project source code should\nbe mounted in the component.\n\n\nDefaults to true for all component types except plugins and components that set `dedicatedPod` to true.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "sourceMapping": {
                        "description": "Optional specification of the path in the container where\nproject sources should be transferred/mounted when `mountSources` is `true`.\nWhen omitted, the default value of /projects is used.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "volumeMounts": {
                        "description": "List of volumes mounts that should be mounted is this container.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "Volume that should be mounted to a component container",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "The volume mount name is the name of an existing `Volume` component.\nIf several containers mount the same volume name\nthen they will reuse the same volume and will be able to access to the same files.",
                              "type": "string",
                              "maxLength": 63,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                            },
                            "path": {
                              "description": "The path in the component container where the volume should be mounted.\nIf not path is mentioned, default path is the is `/<name>`.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "custom": {
                    "description": "Custom component whose logic is implementation-dependant\nand should be provided by the user\npossibly through some dedicated controller",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "componentClass",
                      "embeddedResource"
                    ],
                    "properties": {
                      "componentClass": {
                        "description": "Class of component that the associated implementation controller\nshould use to process this command with the appropriate logic",
                        "type": "string"
                      },
                      "embeddedResource": {
                        "description": "Additional free-form configuration for this custom component\nthat the implementation controller will know how to use",
                        "x-kubernetes-embedded-resource": true,
                        "x-kubernetes-preserve-unknown-fields": true
                      }
                    },
                    "additionalProperties": false
                  },
                  "image": {
                    "description": "Allows specifying the definition of an image for outer loop builds",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "imageName"
                    ],
                    "properties": {
                      "autoBuild": {
                        "description": "Defines if the image should be built during startup.\n\n\nDefault value is `false`",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "dockerfile": {
                        "description": "Allows specifying dockerfile type build",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "args": {
                            "description": "The arguments to supply to the dockerfile build.",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "buildContext": {
                            "description": "Path of source directory to establish build context. Defaults to ${PROJECT_SOURCE} in the container",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "devfileRegistry": {
                            "description": "Dockerfile's Devfile Registry source",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "description": "Id in a devfile registry that contains a Dockerfile. The src in the OCI registry\nrequired for the Dockerfile build will be downloaded for building the image.",
                                "type": "string"
                              },
                              "registryUrl": {
                                "description": "Devfile Registry URL to pull the Dockerfile from when using the Devfile Registry as Dockerfile src.\nTo ensure the Dockerfile gets resolved consistently in different environments,\nit is recommended to always specify the `devfileRegistryUrl` when `Id` is used.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "git": {
                            "description": "Dockerfile's Git source",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "remotes"
                            ],
                            "properties": {
                              "checkoutFrom": {
                                "description": "Defines from what the project should be checked out. Required if there are more than one remote configured",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "remote": {
                                    "description": "The remote name should be used as init. Required if there are more than one remote configured",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "revision": {
                                    "description": "The revision to checkout from. Should be branch name, tag or commit id.\nDefault branch is used if missing or specified revision is not found.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              },
                              "fileLocation": {
                                "description": "Location of the Dockerfile in the Git repository when using git as Dockerfile src.\nDefaults to Dockerfile.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "remotes": {
                                "description": "The remotes map which should be initialized in the git project.\nProjects must have at least one remote configured while StarterProjects & Image Component's Git source can only have at most one remote configured.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "rootRequired": {
                            "description": "Specify if a privileged builder pod is required.\n\n\nDefault value is `false`",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "srcType": {
                            "description": "Type of Dockerfile src",
                            "type": [
                              "string",
                              "null"
                            ],
                            "enum": [
                              "Uri",
                              "DevfileRegistry",
                              "Git"
                            ]
                          },
                          "uri": {
                            "description": "URI Reference of a Dockerfile.\nIt can be a full URL or a relative URI from the current devfile as the base URI.",
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "imageName": {
                        "description": "Name of the image for the resulting outerloop build",
                        "type": "string"
                      },
                      "imageType": {
                        "description": "Type of image",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "Dockerfile"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "kubernetes": {
                    "description": "Allows importing into the devworkspace the Kubernetes resources\ndefined in a given manifest. For example this allows reusing the Kubernetes\ndefinitions used to deploy some runtime components in production.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "deployByDefault": {
                        "description": "Defines if the component should be deployed during startup.\n\n\nDefault value is `false`",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "endpoints": {
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "name",
                            "targetPort"
                          ],
                          "properties": {
                            "annotation": {
                              "description": "Annotations to be added to Kubernetes Ingress or Openshift Route",
                              "type": [
                                "object",
                                "null"
                              ],
                              "additionalProperties": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "attributes": {
                              "description": "Map of implementation-dependant string-based free-form attributes.\n\n\nExamples of Che-specific attributes:\n\n\n- cookiesAuthEnabled: \"true\" / \"false\",\n\n\n- type: \"terminal\" / \"ide\" / \"ide-dev\",",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "exposure": {
                              "description": "Describes how the endpoint should be exposed on the network.\n\n\n- `public` means that the endpoint will be exposed on the public network, typically through\na K8S ingress or an OpenShift route.\n\n\n- `internal` means that the endpoint will be exposed internally outside of the main devworkspace POD,\ntypically by K8S services, to be consumed by other elements running\non the same cloud internal network.\n\n\n- `none` means that the endpoint will not be exposed and will only be accessible\ninside the main devworkspace POD, on a local address.\n\n\nDefault value is `public`",
                              "type": [
                                "string",
                                "null"
                              ],
                              "enum": [
                                "public",
                                "internal",
                                "none"
                              ]
                            },
                            "name": {
                              "type": "string",
                              "maxLength": 63,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                            },
                            "path": {
                              "description": "Path of the endpoint URL",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "protocol": {
                              "description": "Describes the application and transport protocols of the traffic that will go through this endpoint.\n\n\n- `http`: Endpoint will have `http` traffic, typically on a TCP connection.\nIt will be automaticaly promoted to `https` when the `secure` field is set to `true`.\n\n\n- `https`: Endpoint will have `https` traffic, typically on a TCP connection.\n\n\n- `ws`: Endpoint will have `ws` traffic, typically on a TCP connection.\nIt will be automaticaly promoted to `wss` when the `secure` field is set to `true`.\n\n\n- `wss`: Endpoint will have `wss` traffic, typically on a TCP connection.\n\n\n- `tcp`: Endpoint will have traffic on a TCP connection, without specifying an application protocol.\n\n\n- `udp`: Endpoint will have traffic on an UDP connection, without specifying an application protocol.\n\n\nDefault value is `http`",
                              "type": [
                                "string",
                                "null"
                              ],
                              "enum": [
                                "http",
                                "https",
                                "ws",
                                "wss",
                                "tcp",
                                "udp"
                              ]
                            },
                            "secure": {
                              "description": "Describes whether the endpoint should be secured and protected by some\nauthentication process. This requires a protocol of `https` or `wss`.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "targetPort": {
                              "description": "Port number to be used within the container component. The same port cannot\nbe used by two different container components.",
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "inlined": {
                        "description": "Inlined manifest",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "locationType": {
                        "description": "Type of Kubernetes-like location",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "Uri",
                          "Inlined"
                        ]
                      },
                      "uri": {
                        "description": "Location in a file fetched from a uri.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "name": {
                    "description": "Mandatory name that allows referencing the component\nfrom other elements (such as commands) or from an external\ndevfile that may reference this component through a parent or a plugin.",
                    "type": "string",
                    "maxLength": 63,
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                  },
                  "openshift": {
                    "description": "Allows importing into the devworkspace the OpenShift resources\ndefined in a given manifest. For example this allows reusing the OpenShift\ndefinitions used to deploy some runtime components in production.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "deployByDefault": {
                        "description": "Defines if the component should be deployed during startup.\n\n\nDefault value is `false`",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "endpoints": {
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "name",
                            "targetPort"
                          ],
                          "properties": {
                            "annotation": {
                              "description": "Annotations to be added to Kubernetes Ingress or Openshift Route",
                              "type": [
                                "object",
                                "null"
                              ],
                              "additionalProperties": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "attributes": {
                              "description": "Map of implementation-dependant string-based free-form attributes.\n\n\nExamples of Che-specific attributes:\n\n\n- cookiesAuthEnabled: \"true\" / \"false\",\n\n\n- type: \"terminal\" / \"ide\" / \"ide-dev\",",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "exposure": {
                              "description": "Describes how the endpoint should be exposed on the network.\n\n\n- `public` means that the endpoint will be exposed on the public network, typically through\na K8S ingress or an OpenShift route.\n\n\n- `internal` means that the endpoint will be exposed internally outside of the main devworkspace POD,\ntypically by K8S services, to be consumed by other elements running\non the same cloud internal network.\n\n\n- `none` means that the endpoint will not be exposed and will only be accessible\ninside the main devworkspace POD, on a local address.\n\n\nDefault value is `public`",
                              "type": [
                                "string",
                                "null"
                              ],
                              "enum": [
                                "public",
                                "internal",
                                "none"
                              ]
                            },
                            "name": {
                              "type": "string",
                              "maxLength": 63,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                            },
                            "path": {
                              "description": "Path of the endpoint URL",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "protocol": {
                              "description": "Describes the application and transport protocols of the traffic that will go through this endpoint.\n\n\n- `http`: Endpoint will have `http` traffic, typically on a TCP connection.\nIt will be automaticaly promoted to `https` when the `secure` field is set to `true`.\n\n\n- `https`: Endpoint will have `https` traffic, typically on a TCP connection.\n\n\n- `ws`: Endpoint will have `ws` traffic, typically on a TCP connection.\nIt will be automaticaly promoted to `wss` when the `secure` field is set to `true`.\n\n\n- `wss`: Endpoint will have `wss` traffic, typically on a TCP connection.\n\n\n- `tcp`: Endpoint will have traffic on a TCP connection, without specifying an application protocol.\n\n\n- `udp`: Endpoint will have traffic on an UDP connection, without specifying an application protocol.\n\n\nDefault value is `http`",
                              "type": [
                                "string",
                                "null"
                              ],
                              "enum": [
                                "http",
                                "https",
                                "ws",
                                "wss",
                                "tcp",
                                "udp"
                              ]
                            },
                            "secure": {
                              "description": "Describes whether the endpoint should be secured and protected by some\nauthentication process. This requires a protocol of `https` or `wss`.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "targetPort": {
                              "description": "Port number to be used within the container component. The same port cannot\nbe used by two different container components.",
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "inlined": {
                        "description": "Inlined manifest",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "locationType": {
                        "description": "Type of Kubernetes-like location",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "Uri",
                          "Inlined"
                        ]
                      },
                      "uri": {
                        "description": "Location in a file fetched from a uri.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "plugin": {
                    "description": "Allows importing a plugin.\n\n\nPlugins are mainly imported devfiles that contribute components, commands\nand events as a consistent single unit. They are defined in either YAML files\nfollowing the devfile syntax,\nor as `DevWorkspaceTemplate` Kubernetes Custom Resources",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "commands": {
                        "description": "Overrides of commands encapsulated in a parent devfile or a plugin.\nOverriding is done according to K8S strategic merge patch standard rules.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "id"
                          ],
                          "properties": {
                            "apply": {
                              "description": "Command that consists in applying a given component definition,\ntypically bound to a devworkspace event.\n\n\nFor example, when an `apply` command is bound to a `preStart` event,\nand references a `container` component, it will start the container as a\nK8S initContainer in the devworkspace POD, unless the component has its\n`dedicatedPod` field set to `true`.\n\n\nWhen no `apply` command exist for a given component,\nit is assumed the component will be applied at devworkspace start\nby default, unless `deployByDefault` for that component is set to false.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "component": {
                                  "description": "Describes component that will be applied",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "group": {
                                  "description": "Defines the group this command is part of",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "isDefault": {
                                      "description": "Identifies the default command for a given group kind",
                                      "type": [
                                        "boolean",
                                        "null"
                                      ]
                                    },
                                    "kind": {
                                      "description": "Kind of group the command is part of",
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "enum": [
                                        "build",
                                        "run",
                                        "test",
                                        "debug",
                                        "deploy"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "label": {
                                  "description": "Optional label that provides a label for this command\nto be used in Editor UI menus for example",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "attributes": {
                              "description": "Map of implementation-dependant free-form YAML attributes.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "commandType": {
                              "description": "Type of devworkspace command",
                              "type": [
                                "string",
                                "null"
                              ],
                              "enum": [
                                "Exec",
                                "Apply",
                                "Composite"
                              ]
                            },
                            "composite": {
                              "description": "Composite command that allows executing several sub-commands\neither sequentially or concurrently",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "commands": {
                                  "description": "The commands that comprise this composite command",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "group": {
                                  "description": "Defines the group this command is part of",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "isDefault": {
                                      "description": "Identifies the default command for a given group kind",
                                      "type": [
                                        "boolean",
                                        "null"
                                      ]
                                    },
                                    "kind": {
                                      "description": "Kind of group the command is part of",
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "enum": [
                                        "build",
                                        "run",
                                        "test",
                                        "debug",
                                        "deploy"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "label": {
                                  "description": "Optional label that provides a label for this command\nto be used in Editor UI menus for example",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "parallel": {
                                  "description": "Indicates if the sub-commands should be executed concurrently",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "exec": {
                              "description": "CLI Command executed in an existing component container",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "commandLine": {
                                  "description": "The actual command-line string\n\n\nSpecial variables that can be used:\n\n\n - `$PROJECTS_ROOT`: A path where projects sources are mounted as defined by container component's sourceMapping.\n\n\n - `$PROJECT_SOURCE`: A path to a project source ($PROJECTS_ROOT/<project-name>). If there are multiple projects, this will point to the directory of the first one.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "component": {
                                  "description": "Describes component to which given action relates",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "env": {
                                  "description": "Optional list of environment variables that have to be set\nbefore running the command",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "required": [
                                      "name"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "group": {
                                  "description": "Defines the group this command is part of",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "isDefault": {
                                      "description": "Identifies the default command for a given group kind",
                                      "type": [
                                        "boolean",
                                        "null"
                                      ]
                                    },
                                    "kind": {
                                      "description": "Kind of group the command is part of",
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "enum": [
                                        "build",
                                        "run",
                                        "test",
                                        "debug",
                                        "deploy"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "hotReloadCapable": {
                                  "description": "Specify whether the command is restarted or not when the source code changes.\nIf set to `true` the command won't be restarted.\nA *hotReloadCapable* `run` or `debug` command is expected to handle file changes on its own and won't be restarted.\nA *hotReloadCapable* `build` command is expected to be executed only once and won't be executed again.\nThis field is taken into account only for commands `build`, `run` and `debug` with `isDefault` set to `true`.\n\n\nDefault value is `false`",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                },
                                "label": {
                                  "description": "Optional label that provides a label for this command\nto be used in Editor UI menus for example",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "workingDir": {
                                  "description": "Working directory where the command should be executed\n\n\nSpecial variables that can be used:\n\n\n - `$PROJECTS_ROOT`: A path where projects sources are mounted as defined by container component's sourceMapping.\n\n\n - `$PROJECT_SOURCE`: A path to a project source ($PROJECTS_ROOT/<project-name>). If there are multiple projects, this will point to the directory of the first one.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "id": {
                              "description": "Mandatory identifier that allows referencing\nthis command in composite commands, from\na parent, or in events.",
                              "type": "string",
                              "maxLength": 63,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "components": {
                        "description": "Overrides of components encapsulated in a parent devfile or a plugin.\nOverriding is done according to K8S strategic merge patch standard rules.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "attributes": {
                              "description": "Map of implementation-dependant free-form YAML attributes.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "componentType": {
                              "description": "Type of component",
                              "type": [
                                "string",
                                "null"
                              ],
                              "enum": [
                                "Container",
                                "Kubernetes",
                                "Openshift",
                                "Volume",
                                "Image"
                              ]
                            },
                            "container": {
                              "description": "Allows adding and configuring devworkspace-related containers",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "annotation": {
                                  "description": "Annotations that should be added to specific resources for this container",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "deployment": {
                                      "description": "Annotations to be added to deployment",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "additionalProperties": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    },
                                    "service": {
                                      "description": "Annotations to be added to service",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "additionalProperties": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "args": {
                                  "description": "The arguments to supply to the command running the dockerimage component. The arguments are supplied either to the default command provided in the image or to the overridden command.\n\n\nDefaults to an empty array, meaning use whatever is defined in the image.",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "command": {
                                  "description": "The command to run in the dockerimage component instead of the default one provided in the image.\n\n\nDefaults to an empty array, meaning use whatever is defined in the image.",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "cpuLimit": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "cpuRequest": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "dedicatedPod": {
                                  "description": "Specify if a container should run in its own separated pod,\ninstead of running as part of the main development environment pod.\n\n\nDefault value is `false`",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                },
                                "endpoints": {
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "required": [
                                      "name"
                                    ],
                                    "properties": {
                                      "annotation": {
                                        "description": "Annotations to be added to Kubernetes Ingress or Openshift Route",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "attributes": {
                                        "description": "Map of implementation-dependant string-based free-form attributes.\n\n\nExamples of Che-specific attributes:\n\n\n- cookiesAuthEnabled: \"true\" / \"false\",\n\n\n- type: \"terminal\" / \"ide\" / \"ide-dev\",",
                                        "x-kubernetes-preserve-unknown-fields": true
                                      },
                                      "exposure": {
                                        "description": "Describes how the endpoint should be exposed on the network.\n\n\n- `public` means that the endpoint will be exposed on the public network, typically through\na K8S ingress or an OpenShift route.\n\n\n- `internal` means that the endpoint will be exposed internally outside of the main devworkspace POD,\ntypically by K8S services, to be consumed by other elements running\non the same cloud internal network.\n\n\n- `none` means that the endpoint will not be exposed and will only be accessible\ninside the main devworkspace POD, on a local address.\n\n\nDefault value is `public`",
                                        "type": [
                                          "string",
                                          "null"
                                        ],
                                        "enum": [
                                          "public",
                                          "internal",
                                          "none"
                                        ]
                                      },
                                      "name": {
                                        "type": "string",
                                        "maxLength": 63,
                                        "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                      },
                                      "path": {
                                        "description": "Path of the endpoint URL",
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      },
                                      "protocol": {
                                        "description": "Describes the application and transport protocols of the traffic that will go through this endpoint.\n\n\n- `http`: Endpoint will have `http` traffic, typically on a TCP connection.\nIt will be automaticaly promoted to `https` when the `secure` field is set to `true`.\n\n\n- `https`: Endpoint will have `https` traffic, typically on a TCP connection.\n\n\n- `ws`: Endpoint will have `ws` traffic, typically on a TCP connection.\nIt will be automaticaly promoted to `wss` when the `secure` field is set to `true`.\n\n\n- `wss`: Endpoint will have `wss` traffic, typically on a TCP connection.\n\n\n- `tcp`: Endpoint will have traffic on a TCP connection, without specifying an application protocol.\n\n\n- `udp`: Endpoint will have traffic on an UDP connection, without specifying an application protocol.\n\n\nDefault value is `http`",
                                        "type": [
                                          "string",
                                          "null"
                                        ],
                                        "enum": [
                                          "http",
                                          "https",
                                          "ws",
                                          "wss",
                                          "tcp",
                                          "udp"
                                        ]
                                      },
                                      "secure": {
                                        "description": "Describes whether the endpoint should be secured and protected by some\nauthentication process. This requires a protocol of `https` or `wss`.",
                                        "type": [
                                          "boolean",
                                          "null"
                                        ]
                                      },
                                      "targetPort": {
                                        "description": "Port number to be used within the container component. The same port cannot\nbe used by two different container components.",
                                        "type": [
                                          "integer",
                                          "null"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "env": {
                                  "description": "Environment variables used in this container.\n\n\nThe following variables are reserved and cannot be overridden via env:\n\n\n - `$PROJECTS_ROOT`\n\n\n - `$PROJECT_SOURCE`",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "required": [
                                      "name"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "image": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "memoryLimit": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "memoryRequest": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "mountSources": {
                                  "description": "Toggles whether or not the project source code should\nbe mounted in the component.\n\n\nDefaults to true for all component types except plugins and components that set `dedicatedPod` to true.",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                },
                                "sourceMapping": {
                                  "description": "Optional specification of the path in the container where\nproject sources should be transferred/mounted when `mountSources` is `true`.\nWhen omitted, the default value of /projects is used.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "volumeMounts": {
                                  "description": "List of volumes mounts that should be mounted is this container.",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "description": "Volume that should be mounted to a component container",
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "required": [
                                      "name"
                                    ],
                                    "properties": {
                                      "name": {
                                        "description": "The volume mount name is the name of an existing `Volume` component.\nIf several containers mount the same volume name\nthen they will reuse the same volume and will be able to access to the same files.",
                                        "type": "string",
                                        "maxLength": 63,
                                        "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                      },
                                      "path": {
                                        "description": "The path in the component container where the volume should be mounted.\nIf not path is mentioned, default path is the is `/<name>`.",
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                }
                              },
                              "additionalProperties": false
                            },
                            "image": {
                              "description": "Allows specifying the definition of an image for outer loop builds",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "autoBuild": {
                                  "description": "Defines if the image should be built during startup.\n\n\nDefault value is `false`",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                },
                                "dockerfile": {
                                  "description": "Allows specifying dockerfile type build",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "args": {
                                      "description": "The arguments to supply to the dockerfile build.",
                                      "type": [
                                        "array",
                                        "null"
                                      ],
                                      "items": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    },
                                    "buildContext": {
                                      "description": "Path of source directory to establish build context. Defaults to ${PROJECT_SOURCE} in the container",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "devfileRegistry": {
                                      "description": "Dockerfile's Devfile Registry source",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "properties": {
                                        "id": {
                                          "description": "Id in a devfile registry that contains a Dockerfile. The src in the OCI registry\nrequired for the Dockerfile build will be downloaded for building the image.",
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "registryUrl": {
                                          "description": "Devfile Registry URL to pull the Dockerfile from when using the Devfile Registry as Dockerfile src.\nTo ensure the Dockerfile gets resolved consistently in different environments,\nit is recommended to always specify the `devfileRegistryUrl` when `Id` is used.",
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "git": {
                                      "description": "Dockerfile's Git source",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "properties": {
                                        "checkoutFrom": {
                                          "description": "Defines from what the project should be checked out. Required if there are more than one remote configured",
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "remote": {
                                              "description": "The remote name should be used as init. Required if there are more than one remote configured",
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "revision": {
                                              "description": "The revision to checkout from. Should be branch name, tag or commit id.\nDefault branch is used if missing or specified revision is not found.",
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "fileLocation": {
                                          "description": "Location of the Dockerfile in the Git repository when using git as Dockerfile src.\nDefaults to Dockerfile.",
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "remotes": {
                                          "description": "The remotes map which should be initialized in the git project.\nProjects must have at least one remote configured while StarterProjects & Image Component's Git source can only have at most one remote configured.",
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "additionalProperties": {
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "rootRequired": {
                                      "description": "Specify if a privileged builder pod is required.\n\n\nDefault value is `false`",
                                      "type": [
                                        "boolean",
                                        "null"
                                      ]
                                    },
                                    "srcType": {
                                      "description": "Type of Dockerfile src",
                                      "type": [
                                        "string",
                                        "null"
                                      ],
                                      "enum": [
                                        "Uri",
                                        "DevfileRegistry",
                                        "Git"
                                      ]
                                    },
                                    "uri": {
                                      "description": "URI Reference of a Dockerfile.\nIt can be a full URL or a relative URI from the current devfile as the base URI.",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "imageName": {
                                  "description": "Name of the image for the resulting outerloop build",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "imageType": {
                                  "description": "Type of image",
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "enum": [
                                    "Dockerfile",
                                    "AutoBuild"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "kubernetes": {
                              "description": "Allows importing into the devworkspace the Kubernetes resources\ndefined in a given manifest. For example this allows reusing the Kubernetes\ndefinitions used to deploy some runtime components in production.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "deployByDefault": {
                                  "description": "Defines if the component should be deployed during startup.\n\n\nDefault value is `false`",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                },
                                "endpoints": {
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "required": [
                                      "name"
                                    ],
                                    "properties": {
                                      "annotation": {
                                        "description": "Annotations to be added to Kubernetes Ingress or Openshift Route",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "attributes": {
                                        "description": "Map of implementation-dependant string-based free-form attributes.\n\n\nExamples of Che-specific attributes:\n\n\n- cookiesAuthEnabled: \"true\" / \"false\",\n\n\n- type: \"terminal\" / \"ide\" / \"ide-dev\",",
                                        "x-kubernetes-preserve-unknown-fields": true
                                      },
                                      "exposure": {
                                        "description": "Describes how the endpoint should be exposed on the network.\n\n\n- `public` means that the endpoint will be exposed on the public network, typically through\na K8S ingress or an OpenShift route.\n\n\n- `internal` means that the endpoint will be exposed internally outside of the main devworkspace POD,\ntypically by K8S services, to be consumed by other elements running\non the same cloud internal network.\n\n\n- `none` means that the endpoint will not be exposed and will only be accessible\ninside the main devworkspace POD, on a local address.\n\n\nDefault value is `public`",
                                        "type": [
                                          "string",
                                          "null"
                                        ],
                                        "enum": [
                                          "public",
                                          "internal",
                                          "none"
                                        ]
                                      },
                                      "name": {
                                        "type": "string",
                                        "maxLength": 63,
                                        "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                      },
                                      "path": {
                                        "description": "Path of the endpoint URL",
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      },
                                      "protocol": {
                                        "description": "Describes the application and transport protocols of the traffic that will go through this endpoint.\n\n\n- `http`: Endpoint will have `http` traffic, typically on a TCP connection.\nIt will be automaticaly promoted to `https` when the `secure` field is set to `true`.\n\n\n- `https`: Endpoint will have `https` traffic, typically on a TCP connection.\n\n\n- `ws`: Endpoint will have `ws` traffic, typically on a TCP connection.\nIt will be automaticaly promoted to `wss` when the `secure` field is set to `true`.\n\n\n- `wss`: Endpoint will have `wss` traffic, typically on a TCP connection.\n\n\n- `tcp`: Endpoint will have traffic on a TCP connection, without specifying an application protocol.\n\n\n- `udp`: Endpoint will have traffic on an UDP connection, without specifying an application protocol.\n\n\nDefault value is `http`",
                                        "type": [
                                          "string",
                                          "null"
                                        ],
                                        "enum": [
                                          "http",
                                          "https",
                                          "ws",
                                          "wss",
                                          "tcp",
                                          "udp"
                                        ]
                                      },
                                      "secure": {
                                        "description": "Describes whether the endpoint should be secured and protected by some\nauthentication process. This requires a protocol of `https` or `wss`.",
                                        "type": [
                                          "boolean",
                                          "null"
                                        ]
                                      },
                                      "targetPort": {
                                        "description": "Port number to be used within the container component. The same port cannot\nbe used by two different container components.",
                                        "type": [
                                          "integer",
                                          "null"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "inlined": {
                                  "description": "Inlined manifest",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "locationType": {
                                  "description": "Type of Kubernetes-like location",
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "enum": [
                                    "Uri",
                                    "Inlined"
                                  ]
                                },
                                "uri": {
                                  "description": "Location in a file fetched from a uri.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "name": {
                              "description": "Mandatory name that allows referencing the component\nfrom other elements (such as commands) or from an external\ndevfile that may reference this component through a parent or a plugin.",
                              "type": "string",
                              "maxLength": 63,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                            },
                            "openshift": {
                              "description": "Allows importing into the devworkspace the OpenShift resources\ndefined in a given manifest. For example this allows reusing the OpenShift\ndefinitions used to deploy some runtime components in production.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "deployByDefault": {
                                  "description": "Defines if the component should be deployed during startup.\n\n\nDefault value is `false`",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                },
                                "endpoints": {
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "required": [
                                      "name"
                                    ],
                                    "properties": {
                                      "annotation": {
                                        "description": "Annotations to be added to Kubernetes Ingress or Openshift Route",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "additionalProperties": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "attributes": {
                                        "description": "Map of implementation-dependant string-based free-form attributes.\n\n\nExamples of Che-specific attributes:\n\n\n- cookiesAuthEnabled: \"true\" / \"false\",\n\n\n- type: \"terminal\" / \"ide\" / \"ide-dev\",",
                                        "x-kubernetes-preserve-unknown-fields": true
                                      },
                                      "exposure": {
                                        "description": "Describes how the endpoint should be exposed on the network.\n\n\n- `public` means that the endpoint will be exposed on the public network, typically through\na K8S ingress or an OpenShift route.\n\n\n- `internal` means that the endpoint will be exposed internally outside of the main devworkspace POD,\ntypically by K8S services, to be consumed by other elements running\non the same cloud internal network.\n\n\n- `none` means that the endpoint will not be exposed and will only be accessible\ninside the main devworkspace POD, on a local address.\n\n\nDefault value is `public`",
                                        "type": [
                                          "string",
                                          "null"
                                        ],
                                        "enum": [
                                          "public",
                                          "internal",
                                          "none"
                                        ]
                                      },
                                      "name": {
                                        "type": "string",
                                        "maxLength": 63,
                                        "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                      },
                                      "path": {
                                        "description": "Path of the endpoint URL",
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      },
                                      "protocol": {
                                        "description": "Describes the application and transport protocols of the traffic that will go through this endpoint.\n\n\n- `http`: Endpoint will have `http` traffic, typically on a TCP connection.\nIt will be automaticaly promoted to `https` when the `secure` field is set to `true`.\n\n\n- `https`: Endpoint will have `https` traffic, typically on a TCP connection.\n\n\n- `ws`: Endpoint will have `ws` traffic, typically on a TCP connection.\nIt will be automaticaly promoted to `wss` when the `secure` field is set to `true`.\n\n\n- `wss`: Endpoint will have `wss` traffic, typically on a TCP connection.\n\n\n- `tcp`: Endpoint will have traffic on a TCP connection, without specifying an application protocol.\n\n\n- `udp`: Endpoint will have traffic on an UDP connection, without specifying an application protocol.\n\n\nDefault value is `http`",
                                        "type": [
                                          "string",
                                          "null"
                                        ],
                                        "enum": [
                                          "http",
                                          "https",
                                          "ws",
                                          "wss",
                                          "tcp",
                                          "udp"
                                        ]
                                      },
                                      "secure": {
                                        "description": "Describes whether the endpoint should be secured and protected by some\nauthentication process. This requires a protocol of `https` or `wss`.",
                                        "type": [
                                          "boolean",
                                          "null"
                                        ]
                                      },
                                      "targetPort": {
                                        "description": "Port number to be used within the container component. The same port cannot\nbe used by two different container components.",
                                        "type": [
                                          "integer",
                                          "null"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "inlined": {
                                  "description": "Inlined manifest",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "locationType": {
                                  "description": "Type of Kubernetes-like location",
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "enum": [
                                    "Uri",
                                    "Inlined"
                                  ]
                                },
                                "uri": {
                                  "description": "Location in a file fetched from a uri.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "volume": {
                              "description": "Allows specifying the definition of a volume\nshared by several other components",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "ephemeral": {
                                  "description": "Ephemeral volumes are not stored persistently across restarts. Defaults\nto false",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                },
                                "size": {
                                  "description": "Size of the volume",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "id": {
                        "description": "Id in a registry that contains a Devfile yaml file",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "importReferenceType": {
                        "description": "type of location from where the referenced template structure should be retrieved",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "Uri",
                          "Id",
                          "Kubernetes"
                        ]
                      },
                      "kubernetes": {
                        "description": "Reference to a Kubernetes CRD of type DevWorkspaceTemplate",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "namespace": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "registryUrl": {
                        "description": "Registry URL to pull the parent devfile from when using id in the parent reference.\nTo ensure the parent devfile gets resolved consistently in different environments,\nit is recommended to always specify the `registryUrl` when `id` is used.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "uri": {
                        "description": "URI Reference of a parent devfile YAML file.\nIt can be a full URL or a relative URI with the current devfile as the base URI.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "version": {
                        "description": "Specific stack/sample version to pull the parent devfile from, when using id in the parent reference.\nTo specify `version`, `id` must be defined and used as the import reference source.\n`version` can be either a specific stack version, or `latest`.\nIf no `version` specified, default version will be used.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "pattern": "^(latest)|(([1-9])\\.([0-9]+)\\.([0-9]+)(\\-[0-9a-z-]+(\\.[0-9a-z-]+)*)?(\\+[0-9A-Za-z-]+(\\.[0-9A-Za-z-]+)*)?)$"
                      }
                    },
                    "additionalProperties": false
                  },
                  "volume": {
                    "description": "Allows specifying the definition of a volume\nshared by several other components",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "ephemeral": {
                        "description": "Ephemeral volumes are not stored persistently across restarts. Defaults\nto false",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "size": {
                        "description": "Size of the volume",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "workspaceDefaultEditor": {
              "description": "The default editor to workspace create with. It could be a plugin ID or a URI.\nThe plugin ID must have `publisher/plugin/version`.\nThe URI must start from `http`.",
              "type": [
                "string",
                "null"
              ]
            },
            "workspaceNamespaceDefault": {
              "description": "Defines Kubernetes default namespace in which user's workspaces are created for a case when a user does not override it.\nIt's possible to use `<username>`, `<userid>` and `<workspaceid>` placeholders, such as che-workspace-<username>.\nIn that case, a new namespace will be created for each user or workspace.",
              "type": [
                "string",
                "null"
              ]
            },
            "workspacePodNodeSelector": {
              "description": "The node selector that limits the nodes that can run the workspace pods.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "workspacePodTolerations": {
              "description": "The pod tolerations put on the workspace pods to limit where the workspace pods can run.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "effect": {
                    "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "key": {
                    "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "operator": {
                    "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "tolerationSeconds": {
                    "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int64"
                  },
                  "value": {
                    "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              }
            },
            "workspacesDefaultPlugins": {
              "description": "Default plug-ins applied to Devworkspaces.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "editor": {
                    "description": "The editor id to specify default plug-ins for.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "plugins": {
                    "description": "Default plug-in uris for the specified editor.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "storage": {
          "description": "Configuration settings related to the persistent storage used by the Che installation.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "perWorkspaceStrategyPVCStorageClassName": {
              "description": "Storage class for the Persistent Volume Claims dedicated to the Che workspaces. When omitted or left blank, a default storage class is used.",
              "type": [
                "string",
                "null"
              ]
            },
            "perWorkspaceStrategyPvcClaimSize": {
              "description": "Size of the persistent volume claim for workspaces.",
              "type": [
                "string",
                "null"
              ]
            },
            "postgresPVCStorageClassName": {
              "description": "Storage class for the Persistent Volume Claim dedicated to the PostgreSQL database. When omitted or left blank, a default storage class is used.",
              "type": [
                "string",
                "null"
              ]
            },
            "preCreateSubPaths": {
              "description": "Instructs the Che server to start a special Pod to pre-create a sub-path in the Persistent Volumes.\nDefaults to `false`, however it will need to enable it according to the configuration of your Kubernetes cluster.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "pvcClaimSize": {
              "description": "Size of the persistent volume claim for workspaces. Defaults to `10Gi`.",
              "type": [
                "string",
                "null"
              ]
            },
            "pvcJobsImage": {
              "description": "Overrides the container image used to create sub-paths in the Persistent Volumes.\nThis includes the image tag. Omit it or leave it empty to use the default container image provided by the Operator. See also the `preCreateSubPaths` field.",
              "type": [
                "string",
                "null"
              ]
            },
            "pvcStrategy": {
              "description": "Persistent volume claim strategy for the Che server. This Can be:`common` (all workspaces PVCs in one volume),\n`per-workspace` (one PVC per workspace for all declared volumes) and `unique` (one PVC per declared volume). Defaults to `common`.",
              "type": [
                "string",
                "null"
              ]
            },
            "workspacePVCStorageClassName": {
              "description": "Storage class for the Persistent Volume Claims dedicated to the Che workspaces. When omitted or left blank, a default storage class is used.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "CheClusterStatus defines the observed state of Che installation",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "cheClusterRunning": {
          "description": "Status of a Che installation. Can be `Available`, `Unavailable`, or `Available, Rolling Update in Progress`.",
          "type": [
            "string",
            "null"
          ]
        },
        "cheURL": {
          "description": "Public URL to the Che server.",
          "type": [
            "string",
            "null"
          ]
        },
        "cheVersion": {
          "description": "Current installed Che version.",
          "type": [
            "string",
            "null"
          ]
        },
        "dbProvisioned": {
          "description": "Indicates that a PostgreSQL instance has been correctly provisioned or not.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "devfileRegistryURL": {
          "description": "Public URL to the devfile registry.",
          "type": [
            "string",
            "null"
          ]
        },
        "devworkspaceStatus": {
          "description": "The status of the Devworkspace subsystem",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "gatewayHost": {
              "description": "GatewayHost is the resolved host of the ingress/route. This is equal to the Host in the spec\non Kubernetes but contains the actual host name of the route if Host is unspecified on OpenShift.",
              "type": [
                "string",
                "null"
              ]
            },
            "gatewayPhase": {
              "description": "GatewayPhase specifies the phase in which the gateway deployment currently is.\nIf the gateway is disabled, the phase is \"Inactive\".",
              "type": [
                "string",
                "null"
              ]
            },
            "message": {
              "description": "Message contains further human-readable info for why the Che cluster is in the phase it currently is.",
              "type": [
                "string",
                "null"
              ]
            },
            "phase": {
              "description": "Phase is the phase in which the Che cluster as a whole finds itself in.",
              "type": [
                "string",
                "null"
              ]
            },
            "reason": {
              "description": "A brief CamelCase message indicating details about why the Che cluster is in this state.",
              "type": [
                "string",
                "null"
              ]
            },
            "workspaceBaseDomain": {
              "description": "The resolved workspace base domain. This is either the copy of the explicitly defined property of the\nsame name in the spec or, if it is undefined in the spec and we're running on OpenShift, the automatically\nresolved basedomain for routes.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "gitHubOAuthProvisioned": {
          "description": "Indicates whether an Identity Provider instance, Keycloak or RH-SSO, has been configured to integrate with the GitHub OAuth.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "gitServerTLSCertificateConfigMapName": {
          "description": "The ConfigMap containing certificates to propagate to the Che components and to provide particular configuration for Git.",
          "type": [
            "string",
            "null"
          ]
        },
        "helpLink": {
          "description": "A URL that points to some URL where to find help related to the current Operator status.",
          "type": [
            "string",
            "null"
          ]
        },
        "keycloakProvisioned": {
          "description": "Indicates whether an Identity Provider instance, Keycloak or RH-SSO, has been provisioned with realm, client and user.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "keycloakURL": {
          "description": "Public URL to the Identity Provider server, Keycloak or RH-SSO,.",
          "type": [
            "string",
            "null"
          ]
        },
        "message": {
          "description": "A human readable message indicating details about why the Pod is in this condition.",
          "type": [
            "string",
            "null"
          ]
        },
        "openShiftOAuthUserCredentialsSecret": {
          "description": "OpenShift OAuth secret in `openshift-config` namespace that contains user credentials for HTPasswd identity provider.",
          "type": [
            "string",
            "null"
          ]
        },
        "openShiftoAuthProvisioned": {
          "description": "Indicates whether an Identity Provider instance, Keycloak or RH-SSO, has been configured to integrate with the OpenShift OAuth.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "pluginRegistryURL": {
          "description": "Public URL to the plugin registry.",
          "type": [
            "string",
            "null"
          ]
        },
        "reason": {
          "description": "A brief CamelCase message indicating details about why the Pod is in this state.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "org.eclipse.che",
      "kind": "CheCluster",
      "version": "v1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}